name: tests
on:
  # push:
  #   branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
    run_tests:
      runs-on: ubuntu-latest
      container: node:20-bookworm
      steps:
        
      - name: install packs
        run: |
          apt update
          apt install -y libudev-dev libusb-1.0-0-dev curl jq
          apt install -y python3-pip python3.11-venv
          echo master

      # - name: install ipfs
      #   run: |
      #     wget https://dist.ipfs.io/go-ipfs/v0.9.0/go-ipfs_v0.9.0_linux-amd64.tar.gz
      #     tar -xvzf go-ipfs_v0.9.0_linux-amd64.tar.gz
      #     bash go-ipfs/install.sh
      #     ipfs --version
      #     node --version
      #     pwd
      #     ls

      - name: clone repo
        uses: actions/checkout@v3

      - name: install pip packages
        run: |
          pip3 install -r requirements.txt --break-system-packages
      #     pip3 install nose --break-system-packages
      #     pip3 uninstall pyreadline --break-system-packages
      #     pip3 install pyreadline3 --break-system-packages
          
      - name: install snet-sdk
        run: pip3 install -e . --break-system-packages
          
      # - name: install platform-contracts
      #   run: |
      #     cd ..
      #     git clone https://github.com/singnet/platform-contracts.git
      #     cd platform-contracts
      #     npm install
      #     npm install ganache-cli
      #     npm run-script compile

      # - name: build example service
      #   run: |
      #     git clone https://github.com/singnet/example-service.git
      #     cd example-service
      #     pip3 install -r requirements.txt --break-system-packages
      #     sh buildproto.sh
          
      # - name: unit tests
      #   run: |
      #     cd ./snet/cli/test
      #     nosetests -v --with-doctest

      # - name: functional tests for cli
      #   run: |
      #     sh -ex ./snet/cli/test/utils/run_all_functional.sh
